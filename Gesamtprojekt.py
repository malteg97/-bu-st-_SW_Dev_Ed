# generated by mBlock5 for CyberPi
# codes make you happy

import event, time, cyberpi, mbot2, mbuild, random

# initialize variables
Geschwindigkeit = 0
Drehwinkel = 0
Zufall = 0


@event.start
def on_start():
    global Geschwindigkeit, Drehwinkel, Zufall
    cyberpi.audio.set_vol(100)
    cyberpi.console.println("Willkommen!")
    time.sleep(1)
    cyberpi.console.clear()
    cyberpi.console.println(cyberpi.get_battery())
    time.sleep(1)
    cyberpi.console.clear()
    cyberpi.console.println("Geschwindigkeit festlegen:")
    cyberpi.console.println("Taste A: 20 U/Min")
    cyberpi.console.println("Taste B: 50 U/Min")
    while not (cyberpi.controller.is_press('a') or cyberpi.controller.is_press('b')):
      # DO SOMETHING
      pass

    if cyberpi.controller.is_press('a'):
      Geschwindigkeit = 20

    if cyberpi.controller.is_press('b'):
      Geschwindigkeit = 50

    cyberpi.console.clear()
    cyberpi.console.println("Zum Starten Cursor nach vorne ziehen!")


@event.is_press('up')
def is_joy_press():
    global Geschwindigkeit, Drehwinkel, Zufall
    while True:
      mbot2.forward(Geschwindigkeit)
      if mbuild.ultrasonic2.get(1) < 10:
        Zufall = random.randint(1, 2)
        if Zufall == 1:
          mbot2.turn(-90)
          mbot2.forward(Geschwindigkeit, 2)
          mbot2.turn(90)

        if Zufall == 2:
          mbot2.turn(90)
          mbot2.forward(Geschwindigkeit, 2)
          mbot2.turn(-90)

      if (mbuild.quad_rgb_sensor.is_color("white", "R2", 1)):
        mbot2.turn(-90)

      if (mbuild.quad_rgb_sensor.is_color("white", "L2", 1)):
        mbot2.turn(90)


@event.is_anticlockwise
def on_is_anticlockwise():
    global Geschwindigkeit, Drehwinkel, Zufall
    for count in range(3):
      cyberpi.led.on(208, 159, 1, 1)
      time.sleep(0.2)
      cyberpi.led.on(0, 0, 0, 1)
      time.sleep(0.2)


@event.is_clockwise
def on_is_clockwise1():
    global Geschwindigkeit, Drehwinkel, Zufall
    for count2 in range(3):
      cyberpi.led.on(208, 159, 1, 5)
      time.sleep(0.2)
      cyberpi.led.on(0, 0, 0, 5)
      time.sleep(0.2)


# Testkommentar